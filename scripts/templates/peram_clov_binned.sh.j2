#!/bin/bash
# template for computing perambulators with chroma 

#SBATCH --nodes={{ prop_slurm_nodes }}
#SBATCH --ntasks-per-node=4 
#SBATCH --partition=dc-gpu
#SBATCH --gpu-bind=none
#SBATCH --account=exotichadrons
#SBATCH -t {{ prop_chroma_minutes }}
#SBATCH --gres=gpu:{{ num_gpu }}

#METAQ NODES {{ prop_slurm_nodes }}
#METAQ MIN_WC_TIME {{ prop_chroma_minutes }}
#METAQ PROJECT exotichadrons.perams

# check that matching eigs sdb file exists first 
# the num_vecs value here is the size of the distillation basis, should not change
eigs={{ run_path }}/eigs_sdb/eigs_numvecs{{ num_vecs }}_cfg{{ cfg_id }}.sdb
{
if [ ! -f "${eigs}" ]; then
  echo "matching distillation basis not found, exiting"
  exit 0
fi 
}

peram_file={{ run_path }}/perams_sdb/numvec{{ num_vecs_perams }}/peram-{{ num_vecs_perams }}_cfg{{ cfg_id }}.sdb
# Check if the file exists and delete it if it does
if [ -f "$peram_file" ]; then
    echo "File $peram_file exists. Deleting it."
    rm "$peram_file"
else
    echo "File $peram_file has not been generated yet. Continuing..."
fi

export OPENBLAS_NUM_THREADS=16
export OMP_NUM_THREADS=16
export CUDA_VISIBLE_DEVICES=0,1,2,3

CODE_DIR={{ code_dir }}
METAQ_DIR={{ metaq_dir }}
source $CODE_DIR/install-scripts/machines/env-new-jureca-gpu.sh
chroma=$CODE_DIR/install/chroma/bin/chroma

BASE_DIR={{ run_path }}
if [ ! -d "$BASE_DIR/res/log/perams" ]; then
  mkdir -p "$BASE_DIR/res/log/perams";
fi 
if [ ! -d "$BASE_DIR/res/out/perams" ]; then
  mkdir -p "$BASE_DIR/res/out/perams";
fi 
log=$BASE_DIR/res/log/perams/perams_clov{{ cfg_id }}_numvecs-{{ num_vecs_perams }}.log
in=$BASE_DIR/ini/cnfg{{ cfg_id }}/numvec{{ num_vecs_perams }}/peramclov_{{ num_vecs_perams }}_cfg{{ cfg_id }}.ini.xml
out=$BASE_DIR/res/out/perams/perams_clov{{ cfg_id }}_numvecs-{{ num_vecs_perams }}.out.xml
stdout="$BASE_DIR/chroma_out/perams_clov{{ cfg_id }}_numvecs-{{ num_vecs_perams }}.out"

export OPTS=" -geom {{ prop_chroma_geometry|join(' ') }}"
echo "START  "$(date "+%Y-%m-%dT%H:%M")
srun -n 8 -c 16 $chroma $OPTS -i $in -o $out -l $log > $stdout 2>&1
echo "FINISH JOB "$(date "+%Y-%m-%dT%H:%M")
echo "you should move this to metaq dir!" 
