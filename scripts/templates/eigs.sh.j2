#!/bin/bash
# template for computing distillation basis with chroma 

#SBATCH --nodes={{ eigs_slurm_nodes }} 
#SBATCH --partition=dc-gpu
#SBATCH --gpu-bind=none
#SBATCH --account=exotichadrons
#SBATCH -t {{ eigs_chroma_minutes }}
#SBATCH --gres=gpu:1
#SBATCH -J {{ ens_short }}_eigs_cfg{{ cfg_id }}
#SBATCH -o {{ run_path }}/chroma_out/eigs{{ cfg_id }}.out
#SBATCH -e {{ run_path }}/chroma_out/eigs{{ cfg_id }}.err

export USERINSTALLATIONS=/p/project1/cslnpp/slnpp032/QCD/JUWELS_BOOSTER_EASYBUILD/TEST_INSTALL

ml GCC
ml ParaStationMPI/5.10.0-1
ml CHROMA
vers=jwb_pmpi

chroma=${EBROOTCHROMA}/bin/chroma

export OPENBLAS_NUM_THREADS=16
export OMP_NUM_THREADS=16
export CUDA_VISIBLE_DEVICES=0,1,2,3
export SB_LOG=1

BASE_DIR={{ run_path }}
if [ ! -d "$BASE_DIR/log/eigs" ]; then
  mkdir -p "$BASE_DIR/log/eigs";
fi 
if [ ! -d "$BASE_DIR/out/eigs" ]; then
  mkdir -p "$BASE_DIR/out/eigs";
fi 
log=$BASE_DIR/log/eigs/eigs_{{ cfg_id }}.log
in=$BASE_DIR/ini-eigs/cnfg{{ cfg_id }}/eigs_cfg{{ cfg_id }}.ini.xml
out=$BASE_DIR/out/eigs/eigs_{{ cfg_id }}.out.xml

output="$BASE_DIR/chroma_out/eigs{{ cfg_id }}.out"
export OPTS=" -geom {{ eigs_chroma_geometry|join(' ') }}"
echo "START  "$(date "+%Y-%m-%dT%H:%M")
srun -n 1 -c 16 $chroma $OPTS -i $in -o $out -l $log > $output 2>&1
echo "FINISH JOB "$(date "+%Y-%m-%dT%H:%M")
